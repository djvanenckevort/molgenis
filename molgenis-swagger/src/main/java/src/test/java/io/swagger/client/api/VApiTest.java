/**
 * MOLGENIS REST API
 * Documentation for the MOLGENIS Rest API V1 and V2
 *
 * OpenAPI spec version: v1 and v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.LoginResponse;
import io.swagger.client.model.Error;
import io.swagger.client.model.LoginRequest;
import io.swagger.client.model.CopyEntityRequest;
import io.swagger.client.model.ErrorMessageResponse;
import io.swagger.client.model.EntityCollectionResponseV2;
import io.swagger.client.model.EntityCollectionRequestV2;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VApi
 */
public class VApiTest {

    private final VApi api = new VApi();

    
    /**
     * Logs into a MOLGENIS user account
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1LoginPostTest() throws ApiException {
        LoginRequest body = null;
        // LoginResponse response = api.v1LoginPost(body);

        // TODO: test validations
    }
    
    /**
     * Creates a copy of an entity.
     *
     * The copy will be created in the same package and backend as the original entity, so both must be writable.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2CopyEntityNamePostTest() throws ApiException {
        String entityName = null;
        CopyEntityRequest body = null;
        // api.v2CopyEntityNamePost(entityName, body);

        // TODO: test validations
    }
    
    /**
     * Retrieves an entity collection
     *
     * Retrieves an entity collection based on entity name
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2EntityNameGetTest() throws ApiException {
        String entityName = null;
        List<String> attrs = null;
        String q = null;
        String aggs = null;
        List<String> sort = null;
        Integer start = null;
        Integer num = null;
        // EntityCollectionResponseV2 response = api.v2EntityNameGet(entityName, attrs, q, aggs, sort, start, num);

        // TODO: test validations
    }
    
    /**
     * Deletes an entity
     *
     * Deletes an entity instance based on entity name and ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2EntityNameIdDeleteTest() throws ApiException {
        String entityName = null;
        String id = null;
        // api.v2EntityNameIdDelete(entityName, id);

        // TODO: test validations
    }
    
    /**
     * Retrieves an entity
     *
     * Retrieves an entity instance based on entity name and ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2EntityNameIdGetTest() throws ApiException {
        String entityName = null;
        String id = null;
        String attrs = null;
        String method = null;
        // api.v2EntityNameIdGet(entityName, id, attrs, method);

        // TODO: test validations
    }
    
    /**
     * Retrieve attribute metadata
     *
     * Retrieve attribute metadata based on entity name and attribute name
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2EntityNameMetaAttributeNameGetTest() throws ApiException {
        String entityName = null;
        String attributeName = null;
        String method = null;
        // api.v2EntityNameMetaAttributeNameGet(entityName, attributeName, method);

        // TODO: test validations
    }
    
    /**
     * Retrieves an entity collection
     *
     * Retrieves an entity collection based on entity name
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2EntityNamePostTest() throws ApiException {
        String method = null;
        String entityName = null;
        EntityCollectionRequestV2 body = null;
        // EntityCollectionResponseV2 response = api.v2EntityNamePost(method, entityName, body);

        // TODO: test validations
    }
    
    /**
     * Retrieves the MOLGENIS version
     *
     * Retrieves the MOLGENIS version
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2VersionGetTest() throws ApiException {
        // api.v2VersionGet();

        // TODO: test validations
    }
    
}
